{"version":3,"sources":["constant.js","modules/Layouts/Containers/Login/actions.js","modules/Layouts/Containers/DefaultMain/components/Header/index.jsx","routes/HomePage.js","routes/StaffManager.js","routes.js","modules/Layouts/Containers/DefaultMain/index.jsx","modules/Layouts/Containers/Login/index.jsx","modules/Layouts/index.jsx","middleware.js","store.js","modules/Layouts/Containers/Login/reducer.js","modules/Layouts/reducer.js","App.js","serviceWorker.js","index.js"],"names":["appConfig","API_URL","types","AUTHENTICATED_USER","IS_AUTHENTICATED","IS_LOGOUT","isAuthenticated","payload","type","Header","Layout","DefaultHeader","onLogOut","localStorage","removeItem","props","isLogOut","onToggle","style","background","padding","xs","span","lg","className","fontSize","marginLeft","this","collapsed","onClick","Component","mapDispatchToProps","connect","state","path","name","component","React","lazy","resources","StaffManager","routes","concat","HomePage","convertNestedRoutes","length","forEach","route","e","Sider","Content","DefaultMain","isMobile","toggle","setState","height","breakpoint","trigger","theme","collapsedWidth","collapsible","onBreakpoint","console","log","display","alignItems","to","mode","defaultSelectedKeys","Item","key","margin","minHeight","fallback","map","index","exact","render","Login","isAuthenticatedUser","values","a","async","axios","url","method","data","isauthenticated","staff","username","toLowerCase","nameUserLogin","md5","password","passUserLogin","setItem","JSON","stringify","token","notification","open","message","fontWeight","color","description","onChange","target","value","handleSubmit","preventDefault","form","validateFields","err","getFieldDecorator","onSubmit","textAlign","rules","required","prefix","placeholder","valuePropName","initialValue","htmlType","WrappedLogin","Form","create","onAuthenticatedUser","listStaff","LayoutReducer","loginReducer","Layouts","parse","getItem","decode","nameStaff","isAuth","withRouter","rootSaga","all","store","initialState","id","reducer","combineReducers","action","produce","draftState","appReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","compose","createStore","applyMiddleware","run","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0YAAaA,EAAU,CACnBC,QAAU,mC,sECDDC,EAAQ,CACjBC,mBAAqB,qBACrBC,iBAAmB,mBACnBC,UAAY,aAMT,SAASC,EAAgBC,GAC5B,MAAO,CAACC,KAAON,EAAME,iBAAiBG,W,ICHlCE,EAAWC,IAAXD,OAEFE,E,2MAEFC,SAAS,WACLC,aAAaC,WAAW,SACxB,EAAKC,MAAMC,Y,EAGfC,SAAW,WACP,EAAKF,MAAME,Y,wEAIX,OACI,oCACI,kBAACR,EAAD,CAAQS,MAAO,CAAEC,WAAY,OAAQC,QAAS,IAC1C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAI,CAACC,KAAK,IAAKC,GAAI,CAACD,KAAK,KAC1B,kBAAC,IAAD,CACIE,UAAU,UACVN,MAAO,CAAEO,SAAU,GAAIC,WAAY,IACnClB,KAAMmB,KAAKZ,MAAMa,UAAY,cAAgB,YAC7CC,QAASF,KAAKV,YAGtB,kBAAC,IAAD,CAAKI,GAAI,CAACC,KAAK,GAAIC,GAAI,CAACD,KAAK,IAC7B,kBAAC,IAAD,CAAQd,KAAK,SAASqB,QAASF,KAAKf,UAApC,oB,GAzBIkB,aAkCtBC,EAAqB,CACvBf,SDhCG,SAAkBT,GACrB,MAAO,CAACC,KAAON,EAAMG,UAAUE,aCkCpByB,cAAQ,KAAKD,EAAbC,CAAiCrB,GC3CjC,GACX,CACIsB,MAAO,WACPC,KAAM,YACNC,KAAM,WACNC,UAPSC,IAAMC,MAAK,kBAAI,iCAQxBC,UAAY,KCRdC,EAAeH,IAAMC,MAAK,kBAAI,iCCChCG,EAAS,GAAGC,OAAOC,EDCR,CACX,CACIV,MAAO,eACPC,KAAM,gBACNC,KAAM,eACNC,UAAWI,EACXD,UAAY,MCaLE,MAFfA,EAfA,SAASG,EAAoBH,GACzB,IAQI,OAPIA,EAAOI,QACPJ,EAAOK,SAAQ,SAAUC,GACjBA,EAAMR,WAAaQ,EAAMR,UAAUM,SACnCJ,EAASA,EAAOC,OAAOE,EAAoBG,EAAMR,gBAItDE,EACT,MAAOO,KAKJJ,CAAoBH,GCPrBQ,G,OAAmBvC,IAAnBuC,OAAOC,EAAYxC,IAAZwC,QAETC,E,2MACFlB,MAAQ,CACJL,WAAW,EACXwB,UAAU,G,EAGdC,OAAS,WACL,EAAKC,SAAS,CACV1B,WAAY,EAAKK,MAAML,a,wEAIrB,IAAD,OACL,OACI,oCACI,kBAAC,IAAD,CAAQV,MAAO,CAAEqC,OAAQ,UACrB,kBAACN,EAAD,CACIO,WAAY,KACZC,QAAS,KACTC,MAAM,OACNC,eAAgBhC,KAAKM,MAAMmB,SAAW,OAAS,MAC/CQ,aAAW,EACXhC,UAAWD,KAAKM,MAAML,UACtBiC,aAAc,WACVC,QAAQC,IAAI,eACZ,EAAKT,SAAS,CACVF,UAAW,EAAKnB,MAAMmB,aAI9B,kBAAC,IAAD,CAAMlC,MAAO,CAAE8C,QAAS,OAAQC,WAAY,UAAYzC,UAAU,eAAe0C,GAAG,KAChF,uBAAG1C,UAAU,mBACb,4BAAQA,UAAU,YAAYN,MAAO,CAAEO,SAAS,GAAD,OAAKE,KAAKM,MAAML,UAAY,IAAM,UAAjF,gBAIJ,kBAAC,IAAD,CACI8B,MAAM,OACNS,KAAK,SACLC,oBAAqB,CAAC,MAEtB,kBAAC,IAAKC,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMJ,GAAG,KACL,kBAAC,IAAD,CAAM1D,KAAK,OAAOU,MAAO,CAAEO,SAAU,UACrC,kDAGR,kBAAC,IAAK4C,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMJ,GAAG,iBACL,kBAAC,IAAD,CAAM1D,KAAK,UAAUU,MAAO,CAAEO,SAAU,UACxC,qDAGR,kBAAC,IAAK4C,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMJ,GAAG,iBACL,kBAAC,IAAD,CAAM1D,KAAK,OAAOU,MAAO,CAAEO,SAAU,UACrC,mDAGR,kBAAC,IAAK4C,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAM9D,KAAK,SAASU,MAAO,CAAEO,SAAU,UACvC,0CAIZ,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAeG,UAAWD,KAAKM,MAAML,UAAWX,SAAUU,KAAK0B,SAC/D,kBAACH,EAAD,CACIhC,MAAO,CACHqD,OAAQ,YACRnD,QAAS,GACTD,WAAY,OACZqD,UAAW,MAGf,kBAAC,WAAD,CAAUC,SAAU,4CAChB,kBAAC,IAAD,KACKhC,EAAOiC,KAAI,SAAC3B,EAAO4B,GAChB,OAAO5B,EAAMX,UACT,kBAAC,IAAD,CACIkC,IAAKK,EACLzC,KAAMa,EAAMb,KACZ0C,MAAO7B,EAAM6B,MACbzC,KAAMY,EAAMZ,KACZ0C,OAAQ,SAAA9D,GAAK,OAAI,kBAACgC,EAAMX,UAAcrB,MAE1C,QAER,kBAAC,IAAD,CAAUmD,GAAG,wB,GAxFvBpC,aAuG1B,IAEeE,eANf,SAAyBC,GACrB,MAAO,KAGgB,GAEZD,CAA6CmB,G,8DCvGtD2B,G,mBACF,WAAY/D,GAAQ,IAAD,8BACf,4CAAMA,KAaVgE,oBAAsB,SAAOC,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAM,CAChCC,IAAI,GAAD,OAAKpF,EAAUC,QAAf,cACHoF,OAAQ,MACRC,KAAM,MAJQ,QACZC,EADY,SAOdA,EAAgBD,KAAKxC,SAAQ,SAAA0C,GACrBR,EAAOS,SAASC,gBAAkBF,EAAMG,cAAcD,gBAClDE,IAAIZ,EAAOa,YAAcL,EAAMM,eAC/B,EAAK/E,MAAMT,gBAAgB,CACvBkF,MAAQA,IAEZ3E,aAAakF,QAAQ,QAAQC,KAAKC,UAAUT,EAAMU,QAClDC,IAAaC,KAAK,CACdC,QAAS,yBAAKnF,MAAO,CAACoF,WAAW,MAAMC,MAAM,YAApC,6CACTC,YAAa,4EAGbZ,IAAIZ,EAAOa,YAAcL,EAAMM,eACnCK,IAAaC,KAAK,CACdC,QAAS,qDACTG,YAAa,gFAtBf,sCAdH,EA4CnBC,SAAW,SAAAzD,GAAM,IAAD,EACoBA,EAAE0D,OADtB,IACNvE,YADM,MACC,GADD,MACKwE,aADL,MACa,GADb,EAGZ,EAAKrD,SAAL,eACKnB,EAAOwE,KAhDG,EAoDnBC,aAAe,SAAA5D,GAEXA,EAAE6D,iBAEF,EAAK9F,MAAM+F,KAAKC,gBAAe,SAACC,EAAKhC,GAC5BgC,GACD,EAAKjC,oBAAoBC,OAxDjC,EAAK/C,MAAQ,CACT0D,cAAe,GACfG,cAAe,IAJJ,E,mHAgET,IACEmB,EAAsBtF,KAAKZ,MAAM+F,KAAjCG,kBAER,OACI,yBAAKzF,UAAU,kBACX,uBAAGA,UAAU,eACb,kBAAC,IAAD,CAAM0F,SAAUvF,KAAKiF,aAAcpF,UAAU,cACzC,yBAAKN,MAAO,CAACiG,UAAU,SAAS1F,SAAS,GAAG6E,WAAW,SAAvD,4BACA,kBAAC,IAAKjC,KAAN,KACK4C,EAAkB,WAAY,CAC3BG,MAAO,CAAC,CAAEC,UAAU,EAAMhB,QAAS,sCADtCY,CAGG,kBAAC,IAAD,CACI9E,KAAK,YACLsE,SAAU9E,KAAK8E,SACfa,OAAQ,kBAAC,IAAD,CAAM9G,KAAK,OAAOU,MAAO,CAAEqF,MAAO,qBAC1CgB,YAAY,eAIxB,kBAAC,IAAKlD,KAAN,KACK4C,EAAkB,WAAY,CAC3BG,MAAO,CAAC,CAAEC,UAAU,EAAMhB,QAAS,kDADtCY,CAGG,kBAAC,IAAD,CACI9E,KAAK,YACLsE,SAAU9E,KAAK8E,SACfa,OAAQ,kBAAC,IAAD,CAAM9G,KAAK,OAAOU,MAAO,CAAEqF,MAAO,qBAC1C/F,KAAK,WACL+G,YAAY,eAIxB,kBAAC,IAAKlD,KAAN,KACK4C,EAAkB,WAAY,CAC3BO,cAAe,UACfC,cAAc,GAFjBR,CAGE,kBAAC,IAAD,qBACH,kBAAC,IAAD,CAAMzF,UAAU,oBAAoB0C,GAAG,KAAvC,mBAGA,kBAAC,IAAD,CAAQ1D,KAAK,UAAUkH,SAAS,SAASlG,UAAU,qBAAnD,UARJ,MAWO,kBAAC,IAAD,CAAM0C,GAAG,KAAT,wB,GA7GPpC,cAqHd6F,EAAeC,IAAKC,OAAO,CAAE1F,KAAM,SAApByF,CAA+B9C,GAQpD,IAAM/C,EAAqB,CACvB+F,oBN1IG,SAA6BvH,GAChC,MAAO,CAACC,KAAON,EAAMC,mBAAmBI,YM0IxCD,mBAGW0B,eAXf,SAAyBC,GACrB,MAAO,CACH8F,UAAW9F,EAAM+F,cAAcC,aAAaF,aASZhG,EAAzBC,CAA6C2F,GCnItDO,E,2MAgBFnD,oBAAsB,0BAAAE,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAM,CAChCC,IAAI,GAAD,OAAKpF,EAAUC,QAAf,cACHoF,OAAQ,MACRC,KAAM,MAJQ,QACZC,EADY,SAOdA,EAAgBD,KAAKxC,SAAQ,SAAA0C,GACrBA,EAAMM,gBAAkBE,KAAKmC,MAAMtH,aAAauH,QAAQ,eACxD,EAAKrH,MAAMT,gBAAgB,CACvBkF,MAAOA,OAVL,sC,mFAdlB,GAAIQ,KAAKmC,MAAMtH,aAAauH,QAAQ,UAChC,GAAIpC,KAAKmC,MAAMtH,aAAauH,QAAQ,UAAU/B,QAC1CxF,aAAaC,WAAW,cAExB,GAAIuH,IAAOrC,KAAKmC,MAAMtH,aAAauH,QAAQ,WAAWE,UAAW,CAC7D,IAAI9C,EAAQ6C,IAAOrC,KAAKmC,MAAMtH,aAAauH,QAAQ,WACnDzG,KAAKZ,MAAMT,gBAAgB,CACvBkF,MAAOA,O,+BAwBjB,IAAD,EACsB7D,KAAKZ,MAAxBwH,cADH,SAGL,OAAO,oCAAGA,EAAS,kBAAC,EAAD,MAAkB,kBAAC,EAAD,W,GApCvBzG,aA8CtB,IAAMC,GAAqB,CACvBzB,mBAGWkI,eAAWxG,aAV1B,SAAyBC,GACrB,MAAO,CACHsG,OAAQtG,EAAM+F,cAAcC,aAAaM,UAQExG,GAAzBC,CAA6CkG,I,yCC7D9CO,IAAV,SAAUA,KAAV,iEACX,OADW,SACLC,aAAK,IADA,wC,ICMXC,G,oBCRAC,GAAe,CACfb,UAAW,GACXvC,MAAO,CACHqD,GAAI,EACJP,UAAW,GACXxC,cAAe,GACfH,cAAe,IAEnB4C,QAAS,GCPAO,GAAUC,aAAgB,CACnCd,aDSwB,WAAmC,IAAlChG,EAAiC,uDAAzB2G,GAAcI,EAAW,uCACtD,OAAQA,EAAOxI,MACX,KAAKN,EAAMC,mBACP,OAAO8I,aAAQhH,GAAQ,SAAAiH,GACnBA,EAAWnB,UAAYiB,EAAOzI,QAAQwH,aAE9C,KAAK7H,EAAME,iBACP,OAAO6I,aAAQhH,GAAM,SAAAiH,GACjBA,EAAWX,QAAS,EACpBW,EAAW1D,MAAQwD,EAAOzI,QAAQiF,SAE1C,KAAKtF,EAAMG,UACP,OAAO4I,aAAQhH,GAAM,SAAAiH,GACjBA,EAAWX,QAAS,KAE5B,QACI,OAAO,gBAAItG,ODvBrBkH,GAAaJ,aAAgB,CAC/Bf,mBAKEoB,GAAiBC,eAEjBC,GAAsC,kBAAXC,QAAuBA,OAAM,qCACtDA,OAAM,qCAAyC,IAAOC,KAE1Db,GAAQc,aAAYN,GAAYG,GAAiBI,aAAgBN,MAErEA,GAAeO,IAAIlB,IAEJE,UGQAiB,I,+LAdP,OACI,oCACI,kBAAC,IAAD,CAAUjB,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOzG,KAAK,IAAIC,KAAK,OAAOC,UAAW8F,a,GATjDpG,cCDE+H,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASC,MACvB,2DCZNC,IAASpF,OAAO,kBAAC,GAAD,MAASqF,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.83c47b9c.chunk.js","sourcesContent":["export const appConfig={\r\n    API_URL : \"https://greenfesh.herokuapp.com\"\r\n};","export const types = {\r\n    AUTHENTICATED_USER : 'AUTHENTICATED_USER',\r\n    IS_AUTHENTICATED : 'IS_AUTHENTICATED',\r\n    IS_LOGOUT : 'IS_LOGOUT'\r\n};\r\n\r\nexport function onAuthenticatedUser(payload){\r\n    return {type : types.AUTHENTICATED_USER,payload}\r\n};\r\nexport function isAuthenticated(payload){\r\n    return {type : types.IS_AUTHENTICATED,payload}\r\n};\r\nexport function isLogOut(payload){\r\n    return {type : types.IS_LOGOUT,payload}\r\n};","import React, { Component } from 'react';\r\nimport { Icon, Layout, Button, Row, Col } from 'antd';\r\nimport {connect} from 'react-redux'\r\n\r\n//actions\r\nimport {isLogOut} from '../../../Login/actions'\r\n\r\nconst { Header } = Layout;\r\n\r\nclass DefaultHeader extends Component {\r\n\r\n    onLogOut=()=>{\r\n        localStorage.removeItem('token');\r\n        this.props.isLogOut();\r\n    }\r\n\r\n    onToggle = () => {\r\n        this.props.onToggle();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header style={{ background: '#fff', padding: 0 }}>\r\n                    <Row>\r\n                        <Col xs={{span:18}} lg={{span:22}}>\r\n                            <Icon\r\n                                className='trigger'\r\n                                style={{ fontSize: 20, marginLeft: 16 }}\r\n                                type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                                onClick={this.onToggle}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={{span:6}} lg={{span:2}} >\r\n                        <Button type=\"dashed\" onClick={this.onLogOut}>Sign Out</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    isLogOut,\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(DefaultHeader);\r\n","import React from 'react';\r\n\r\nconst HomePage = React.lazy(()=>import('../modules/HomePage'));\r\n\r\nexport default [\r\n    {\r\n        state: 'homepage',\r\n        path: '/homepage',\r\n        name: 'Homepage',\r\n        component: HomePage,\r\n        resources : []\r\n    }\r\n]","import React from 'react';\r\n\r\nconst StaffManager = React.lazy(()=>import('../modules/StaffManager'));\r\n\r\nexport default [\r\n    {\r\n        state: 'staffmanager',\r\n        path: '/staffmanager',\r\n        name: 'Staffmanager',\r\n        component: StaffManager,\r\n        resources : []\r\n    }\r\n]","import HomePage from './routes/HomePage';\r\nimport StaffManager from './routes/StaffManager';\r\n\r\nlet routes = [].concat(HomePage,StaffManager);\r\n\r\n//Convert nested routes to simple routes\r\nfunction convertNestedRoutes(routes) {\r\n    try {\r\n        if (routes.length) {\r\n            routes.forEach(function (route) {\r\n                if (route.resources && route.resources.length) {\r\n                    routes = routes.concat(convertNestedRoutes(route.resources));\r\n                }\r\n            });\r\n        }\r\n        return routes;\r\n    } catch (e) {\r\n        //Error\r\n    }\r\n}\r\n\r\nroutes = convertNestedRoutes(routes);\r\n\r\nexport default routes;","//libaries\r\nimport React, { Component, Suspense } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//components\r\nimport DefaultHeader from './components/Header';\r\n\r\n//assets\r\nimport routes from '../../../../routes';\r\nimport './style.css';\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nclass DefaultMain extends Component {\r\n    state = {\r\n        collapsed: true,\r\n        isMobile: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Layout style={{ height: '100vh' }}>\r\n                    <Sider\r\n                        breakpoint={'sm'}\r\n                        trigger={null}\r\n                        theme='dark'\r\n                        collapsedWidth={this.state.isMobile ? '80px' : '0px'}\r\n                        collapsible\r\n                        collapsed={this.state.collapsed}\r\n                        onBreakpoint={() => {\r\n                            console.log('break point');\r\n                            this.setState({\r\n                                isMobile: !this.state.isMobile,\r\n                            });\r\n                        }}\r\n                    >\r\n                        <Link style={{ display: 'flex', alignItems: 'center' }} className='header-sider' to='/'>\r\n                            <i className='logo-greenfesh'></i>\r\n                            <strong className='title-app' style={{ fontSize: `${this.state.collapsed ? '0' : '16px'}` }}>\r\n                                MANAGER APP\r\n                            </strong>\r\n                        </Link>\r\n                        <Menu \r\n                            theme='dark' \r\n                            mode='inline' \r\n                            defaultSelectedKeys={['1']}\r\n                            >\r\n                            <Menu.Item key='1'>\r\n                                <Link to='/'>\r\n                                    <Icon type='home' style={{ fontSize: '18px' }} />\r\n                                    <span>Trang chủ</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key='2'>\r\n                                <Link to='/staffmanager'>\r\n                                    <Icon type='history' style={{ fontSize: '18px' }} />\r\n                                    <span>Lịch sử</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key='3'>\r\n                                <Link to='/staffmanager'>\r\n                                    <Icon type='user' style={{ fontSize: '18px' }} />\r\n                                    <span>Nhân viên</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key='4'>\r\n                                <Icon type='upload' style={{ fontSize: '18px' }} />\r\n                                <span>nav 3</span>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <DefaultHeader collapsed={this.state.collapsed} onToggle={this.toggle} />\r\n                        <Content\r\n                            style={{\r\n                                margin: '24px 16px',\r\n                                padding: 24,\r\n                                background: '#fff',\r\n                                minHeight: 100,\r\n                            }}\r\n                        >\r\n                            <Suspense fallback={<div>Loading...</div>}>\r\n                                <Switch>\r\n                                    {routes.map((route, index) => {\r\n                                        return route.component ? (\r\n                                            <Route\r\n                                                key={index}\r\n                                                path={route.path}\r\n                                                exact={route.exact}\r\n                                                name={route.name}\r\n                                                render={props => <route.component {...props} />}\r\n                                            />\r\n                                        ) : null;\r\n                                    })}\r\n                                    <Redirect to='/homepage' />\r\n                                </Switch>\r\n                            </Suspense>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultMain);\r\n","//libaries\r\nimport React, { Component } from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox, notification } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport md5 from 'md5';\r\nimport decode from 'jwt-decode';\r\n\r\n//appconfig\r\nimport { appConfig } from '../../../../constant';\r\n\r\n//actions\r\nimport { onAuthenticatedUser, isAuthenticated } from './actions';\r\n\r\n//assets\r\nimport './style.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameUserLogin: '',\r\n            passUserLogin: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        \r\n\r\n    }\r\n\r\n    isAuthenticatedUser = async (values) => {\r\n        const isauthenticated = await axios({\r\n            url: `${appConfig.API_URL}/listStaff`,\r\n            method: 'GET',\r\n            data: {},\r\n        });\r\n        if (isauthenticated) {\r\n            isauthenticated.data.forEach(staff => {\r\n                if (values.username.toLowerCase() === staff.nameUserLogin.toLowerCase()) {\r\n                    if (md5(values.password) === staff.passUserLogin) {\r\n                        this.props.isAuthenticated({\r\n                            staff : staff\r\n                        });\r\n                        localStorage.setItem('token',JSON.stringify(staff.token))\r\n                        notification.open({\r\n                            message: <div style={{fontWeight:'500',color:'#45b5aa'}}>Đăng nhập thành công</div>,\r\n                            description: 'Chào mừng đến ứng dụng GreenFesh Manager !'\r\n                        })\r\n                    }\r\n                    else if(md5(values.password) !== staff.passUserLogin){\r\n                        notification.open({\r\n                            message: 'Bạn đã đăng nhập sai !',\r\n                            description: 'Bạn đã nhập sai tên hoặc mật khẩu !'\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    onChange = e => {\r\n        let { name = '', value = '' } = e.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                this.isAuthenticatedUser(values);\r\n            } else {\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <div className='warraper-login'>\r\n                <i className=\"logo-login\"></i>\r\n                <Form onSubmit={this.handleSubmit} className='login-form'>\r\n                    <div style={{textAlign:'center',fontSize:20,fontWeight:'bold'}}>Đăng nhập</div>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: 'Xin vui lòng nhập tên' }],\r\n                        })(\r\n                            <Input\r\n                                name='nameStaff'\r\n                                onChange={this.onChange}\r\n                                prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder='Username'\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: 'Xin vui lòng nhập mật khẩu' }],\r\n                        })(\r\n                            <Input\r\n                                name='passStaff'\r\n                                onChange={this.onChange}\r\n                                prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type='password'\r\n                                placeholder='Password'\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox>Remember me</Checkbox>)}\r\n                        <Link className='login-form-forgot' to='/'>\r\n                            Forgot password\r\n                        </Link>\r\n                        <Button type='primary' htmlType='submit' className='login-form-button'>\r\n                            Log in\r\n                        </Button>\r\n                        Or <Link to='/'>register now!</Link>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedLogin = Form.create({ name: 'login' })(Login);\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listStaff: state.LayoutReducer.loginReducer.listStaff,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onAuthenticatedUser,\r\n    isAuthenticated,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedLogin);\r\n","//libaries\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n//appConfig\r\nimport { appConfig } from '../../constant';\r\nimport decode from 'jwt-decode';\r\n\r\n//components\r\nimport DefaultMain from './Containers/DefaultMain';\r\nimport Login from './Containers/Login';\r\n\r\n//actions\r\nimport { isAuthenticated } from './Containers/Login/actions';\r\n\r\nclass Layouts extends Component {\r\n    componentDidMount() {\r\n        if (JSON.parse(localStorage.getItem('token'))) {\r\n            if (JSON.parse(localStorage.getItem('token')).message) {\r\n                localStorage.removeItem('token');\r\n            } else {\r\n                if (decode(JSON.parse(localStorage.getItem('token'))).nameStaff) {\r\n                    let staff = decode(JSON.parse(localStorage.getItem('token')));\r\n                    this.props.isAuthenticated({\r\n                        staff: staff,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isAuthenticatedUser = async () => {\r\n        const isauthenticated = await axios({\r\n            url: `${appConfig.API_URL}/listStaff`,\r\n            method: 'GET',\r\n            data: {},\r\n        });\r\n        if (isauthenticated) {\r\n            isauthenticated.data.forEach(staff => {\r\n                if (staff.passUserLogin === JSON.parse(localStorage.getItem('userLogin'))) {\r\n                    this.props.isAuthenticated({\r\n                        staff: staff,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isAuth = false } = this.props;\r\n\r\n        return <>{isAuth ? <DefaultMain /> : <Login />}</>;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuth: state.LayoutReducer.loginReducer.isAuth,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    isAuthenticated,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Layouts));\r\n","//libaries\r\nimport {all,fork} from 'redux-saga/effects';\r\n\r\n//Middleware\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all ([\r\n        \r\n    ])\r\n}","import { createStore, combineReducers, applyMiddleware , compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './middleware';\r\nimport { appConfig } from './constant';\r\n\r\n//Reducer \r\nimport {reducer as LayoutReducer} from './modules/Layouts/reducer';\r\n\r\nconst appReducer = combineReducers({\r\n    LayoutReducer\r\n});\r\n\r\nlet store = null;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers =  typeof window === 'object' && window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] ?\r\n        window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({ }) : compose;\r\n\r\n    store = createStore(appReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","//types\r\nimport { types } from './actions';\r\nimport produce from 'immer';\r\n\r\nvar initialState = {\r\n    listStaff: [],\r\n    staff: {\r\n        id: 0,\r\n        nameStaff: '',\r\n        passUserLogin: '',\r\n        nameUserLogin: '',\r\n    },\r\n    isAuth : false\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case types.AUTHENTICATED_USER:\r\n                return produce(state , draftState => {\r\n                    draftState.listStaff = action.payload.listStaff;\r\n                })\r\n            case types.IS_AUTHENTICATED:\r\n                return produce(state,draftState => {\r\n                    draftState.isAuth = true;\r\n                    draftState.staff = action.payload.staff;\r\n                })    \r\n            case types.IS_LOGOUT:\r\n                return produce(state,draftState => {\r\n                    draftState.isAuth = false;\r\n                })    \r\n            default:\r\n                return {...state};\r\n        }\r\n};","import {combineReducers} from 'redux';\r\n\r\n//reducer\r\nimport {loginReducer} from './Containers/Login/reducer'\r\n\r\nexport const reducer = combineReducers({\r\n    loginReducer\r\n});","//libaries\nimport React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport {HashRouter as Router, Switch ,Route} from 'react-router-dom';\nimport Layouts from './modules/Layouts'\n\n//store\nimport store from './store';\n\n//css\nimport './style.css';\nimport 'antd/dist/antd.css';\n\nclass App extends Component {\n    \n\n    render() {\n        return (\n            <>\n                <Provider store={store}>\n                    <Router>\n                        <Switch>\n                            <Route path=\"/\" name=\"Home\" component={Layouts}/>\n                        </Switch>\n                    </Router>\n                </Provider>             \n            </>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}